version: "3.9"
services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: chispart
      POSTGRES_PASSWORD: chispart
      POSTGRES_DB: agents
    ports: ["5432:5432"]
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:6-alpine
    ports: ["6379:6379"]

  minio:
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports: ["9000:9000","9001:9001"]
    volumes:
      - minio:/data

  # job para crear bucket "artifacts" en minio
  minio-mc:
    image: bitnami/minio-client:latest
    depends_on: [minio]
    environment:
      MINIO_SERVER_HOST: minio
      MINIO_SERVER_ACCESS_KEY: minioadmin
      MINIO_SERVER_SECRET_KEY: minioadmin
    command: >
      sh -c "
      mc alias set local http://minio:9000 minioadmin minioadmin;
      mc mb --ignore-existing local/artifacts;
      mc anonymous set download local/artifacts;
      "

  orchestrator:
    build:
      context: ./chispart-mobile
    depends_on: [postgres, redis, minio, minio-mc]
    environment:
      NODE_ENV: development
      POSTGRES_URL: postgres://chispart:chispart@postgres:5432/agents
      REDIS_URL: redis://redis:6379
      S3_ENDPOINT: http://minio:9000
      S3_ACCESS_KEY: minioadmin
      S3_SECRET_KEY: minioadmin
      S3_BUCKET: artifacts
      JWT_SECRET: devsecret
      PORT: 4000
    ports: ["4000:4000"]
    command: python3 app.py --host 0.0.0.0 --port 4000

  console:
    build:
      context: ./chispart-mobile
    depends_on: [orchestrator]
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:4000
    ports: ["3000:3000"]
    command: python3 app.py --host 0.0.0.0 --port 3000

  cloud-api:
    build:
      context: ./chispart-cloud
    depends_on: [postgres, redis, minio]
    environment:
      REDIS_URL: redis://redis:6379
      S3_ENDPOINT: http://minio:9000
      S3_ACCESS_KEY: minioadmin
      S3_SECRET_KEY: minioadmin
      S3_BUCKET: artifacts
    ports: ["8080:8080"]
    command: python3 app.py

  shell-worker:
    build:
      context: ./chispart-cloud
    depends_on: [redis, minio]
    environment:
      REDIS_URL: redis://redis:6379
      S3_ENDPOINT: http://minio:9000
      S3_ACCESS_KEY: minioadmin
      S3_SECRET_KEY: minioadmin
      S3_BUCKET: artifacts
    command: celery -A celery_config.celery_app worker -Q shell -l info

  git-worker:
    build:
      context: ./chispart-cloud
    depends_on: [redis, minio]
    environment:
      REDIS_URL: redis://redis:6379
      S3_ENDPOINT: http://minio:9000
      S3_ACCESS_KEY: minioadmin
      S3_SECRET_KEY: minioadmin
      S3_BUCKET: artifacts
    command: celery -A celery_config.celery_app worker -Q git -l info

  llm-worker:
    build:
      context: ./chispart-cloud
    depends_on: [redis, minio]
    environment:
      REDIS_URL: redis://redis:6379
      S3_ENDPOINT: http://minio:9000
      S3_ACCESS_KEY: minioadmin
      S3_SECRET_KEY: minioadmin
      S3_BUCKET: artifacts
    command: celery -A celery_config.celery_app worker -Q llm -l info

  qa-worker:
    build:
      context: ./chispart-cloud
    depends_on: [redis, minio]
    environment:
      REDIS_URL: redis://redis:6379
      S3_ENDPOINT: http://minio:9000
      S3_ACCESS_KEY: minioadmin
      S3_SECRET_KEY: minioadmin
      S3_BUCKET: artifacts
    command: celery -A celery_config.celery_app worker -Q qa -l info

  tests-worker:
    build:
      context: ./chispart-cloud
    depends_on: [redis, minio]
    environment:
      REDIS_URL: redis://redis:6379
      S3_ENDPOINT: http://minio:9000
      S3_ACCESS_KEY: minioadmin
      S3_SECRET_KEY: minioadmin
      S3_BUCKET: artifacts
    command: celery -A celery_config.celery_app worker -Q tests -l info

  repo-worker:
    build:
      context: ./chispart-cloud
    depends_on: [redis, minio]
    environment:
      REDIS_URL: redis://redis:6379
      S3_ENDPOINT: http://minio:9000
      S3_ACCESS_KEY: minioadmin
      S3_SECRET_KEY: minioadmin
      S3_BUCKET: artifacts
    command: celery -A celery_config.celery_app worker -Q repo -l info

volumes:
  pgdata:
  minio:
