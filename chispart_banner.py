#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
üöÄ Chispart-CLI-LLM Banner Generator
Generador de banner isom√©trico con colores ne√≥n para Chispart
"""

import os
import sys

# Colores ne√≥n ANSI RGB 24-bit
class ChispartColors:
    # Colores Ne√≥n
    GREEN_NEON = '\033[38;2;0;255;136m'       # Verde Manzana Ne√≥n
    PURPLE_NEON = '\033[38;2;187;136;255m'    # Lila Ne√≥n
    PINK_NEON = '\033[38;2;255;136;187m'      # Rosa Ne√≥n
    CYAN_NEON = '\033[38;2;136;255;255m'      # Cian Ne√≥n
    YELLOW_NEON = '\033[38;2;255;255;136m'    # Amarillo Ne√≥n
    RED_NEON = '\033[38;2;255;136;136m'       # Rojo Ne√≥n
    
    # Colores de fondo
    BG_DARK = '\033[48;2;10;10;10m'           # Negro Profundo
    BG_GRAY = '\033[48;2;26;26;26m'           # Gris Oscuro
    
    # Reset
    RESET = '\033[0m'
    BOLD = '\033[1m'
    DIM = '\033[2m'

def get_chispart_isometric_banner():
    """
    Genera el banner isom√©trico de Chispart-CLI-LLM
    Estilo: Isometric --filled inspirado en oh-my-logo
    """
    c = ChispartColors
    
    banner = f"""
{c.PURPLE_NEON}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó{c.RESET}
{c.PURPLE_NEON}‚ïë{c.RESET}                                                                              {c.PURPLE_NEON}‚ïë{c.RESET}
{c.PURPLE_NEON}‚ïë{c.RESET}    {c.GREEN_NEON}‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà{c.RESET}  {c.PURPLE_NEON}‚ñà‚ñà{c.RESET}  {c.PINK_NEON}‚ñà‚ñà{c.RESET}  {c.CYAN_NEON}‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà{c.RESET}  {c.GREEN_NEON}‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà{c.RESET}   {c.PURPLE_NEON}‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà{c.RESET}  {c.PINK_NEON}‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà{c.RESET}  {c.CYAN_NEON}‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà{c.RESET}    {c.PURPLE_NEON}‚ïë{c.RESET}
{c.PURPLE_NEON}‚ïë{c.RESET}   {c.GREEN_NEON}‚ñà‚ñà{c.RESET}    {c.GREEN_NEON}‚ñà‚ñà{c.RESET} {c.PURPLE_NEON}‚ñà‚ñà{c.RESET}  {c.PINK_NEON}‚ñà‚ñà{c.RESET} {c.CYAN_NEON}‚ñà‚ñà{c.RESET}    {c.CYAN_NEON}‚ñà‚ñà{c.RESET} {c.GREEN_NEON}‚ñà‚ñà{c.RESET}    {c.GREEN_NEON}‚ñà‚ñà{c.RESET}  {c.PURPLE_NEON}‚ñà‚ñà{c.RESET}    {c.PURPLE_NEON}‚ñà‚ñà{c.RESET} {c.PINK_NEON}‚ñà‚ñà{c.RESET}    {c.PINK_NEON}‚ñà‚ñà{c.RESET} {c.CYAN_NEON}‚ñà‚ñà{c.RESET}    {c.CYAN_NEON}‚ñà‚ñà{c.RESET}   {c.PURPLE_NEON}‚ïë{c.RESET}
{c.PURPLE_NEON}‚ïë{c.RESET}   {c.GREEN_NEON}‚ñà‚ñà{c.RESET}       {c.PURPLE_NEON}‚ñà‚ñà{c.RESET}  {c.PINK_NEON}‚ñà‚ñà{c.RESET} {c.CYAN_NEON}‚ñà‚ñà{c.RESET}       {c.GREEN_NEON}‚ñà‚ñà{c.RESET}       {c.PURPLE_NEON}‚ñà‚ñà{c.RESET}    {c.PURPLE_NEON}‚ñà‚ñà{c.RESET} {c.PINK_NEON}‚ñà‚ñà{c.RESET}    {c.PINK_NEON}‚ñà‚ñà{c.RESET} {c.CYAN_NEON}‚ñà‚ñà{c.RESET}    {c.CYAN_NEON}‚ñà‚ñà{c.RESET}   {c.PURPLE_NEON}‚ïë{c.RESET}
{c.PURPLE_NEON}‚ïë{c.RESET}   {c.GREEN_NEON}‚ñà‚ñà{c.RESET}       {c.PURPLE_NEON}‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà{c.RESET} {c.CYAN_NEON}‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà{c.RESET}   {c.GREEN_NEON}‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà{c.RESET}   {c.PURPLE_NEON}‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà{c.RESET}  {c.PINK_NEON}‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà{c.RESET}  {c.CYAN_NEON}‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà{c.RESET}    {c.PURPLE_NEON}‚ïë{c.RESET}
{c.PURPLE_NEON}‚ïë{c.RESET}   {c.GREEN_NEON}‚ñà‚ñà{c.RESET}    {c.GREEN_NEON}‚ñà‚ñà{c.RESET} {c.PURPLE_NEON}‚ñà‚ñà{c.RESET}  {c.PINK_NEON}‚ñà‚ñà{c.RESET} {c.CYAN_NEON}‚ñà‚ñà{c.RESET}       {c.GREEN_NEON}‚ñà‚ñà{c.RESET}    {c.GREEN_NEON}‚ñà‚ñà{c.RESET}  {c.PURPLE_NEON}‚ñà‚ñà{c.RESET}    {c.PURPLE_NEON}‚ñà‚ñà{c.RESET} {c.PINK_NEON}‚ñà‚ñà{c.RESET}    {c.PINK_NEON}‚ñà‚ñà{c.RESET} {c.CYAN_NEON}‚ñà‚ñà{c.RESET}    {c.CYAN_NEON}‚ñà‚ñà{c.RESET}   {c.PURPLE_NEON}‚ïë{c.RESET}
{c.PURPLE_NEON}‚ïë{c.RESET}    {c.GREEN_NEON}‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà{c.RESET}  {c.PURPLE_NEON}‚ñà‚ñà{c.RESET}  {c.PINK_NEON}‚ñà‚ñà{c.RESET} {c.CYAN_NEON}‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà{c.RESET}  {c.GREEN_NEON}‚ñà‚ñà{c.RESET}    {c.GREEN_NEON}‚ñà‚ñà{c.RESET}  {c.PURPLE_NEON}‚ñà‚ñà{c.RESET}    {c.PURPLE_NEON}‚ñà‚ñà{c.RESET} {c.PINK_NEON}‚ñà‚ñà{c.RESET}    {c.PINK_NEON}‚ñà‚ñà{c.RESET} {c.CYAN_NEON}‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà{c.RESET}    {c.PURPLE_NEON}‚ïë{c.RESET}
{c.PURPLE_NEON}‚ïë{c.RESET}                                                                              {c.PURPLE_NEON}‚ïë{c.RESET}
{c.PURPLE_NEON}‚ïë{c.RESET}                        {c.YELLOW_NEON}‚ñà‚ñà‚ñà‚ñà‚ñà{c.RESET}  {c.GREEN_NEON}‚ñà‚ñà{c.RESET}      {c.PURPLE_NEON}‚ñà‚ñà{c.RESET}      {c.PINK_NEON}‚ñà‚ñà{c.RESET}                         {c.PURPLE_NEON}‚ïë{c.RESET}
{c.PURPLE_NEON}‚ïë{c.RESET}                       {c.YELLOW_NEON}‚ñà‚ñà{c.RESET}   {c.YELLOW_NEON}‚ñà‚ñà{c.RESET} {c.GREEN_NEON}‚ñà‚ñà{c.RESET}      {c.PURPLE_NEON}‚ñà‚ñà{c.RESET}      {c.PINK_NEON}‚ñà‚ñà{c.RESET}                         {c.PURPLE_NEON}‚ïë{c.RESET}
{c.PURPLE_NEON}‚ïë{c.RESET}                       {c.YELLOW_NEON}‚ñà‚ñà{c.RESET}      {c.GREEN_NEON}‚ñà‚ñà{c.RESET}      {c.PURPLE_NEON}‚ñà‚ñà{c.RESET}      {c.PINK_NEON}‚ñà‚ñà{c.RESET}                         {c.PURPLE_NEON}‚ïë{c.RESET}
{c.PURPLE_NEON}‚ïë{c.RESET}                       {c.YELLOW_NEON}‚ñà‚ñà{c.RESET}      {c.GREEN_NEON}‚ñà‚ñà{c.RESET}      {c.PURPLE_NEON}‚ñà‚ñà{c.RESET}      {c.PINK_NEON}‚ñà‚ñà{c.RESET}                         {c.PURPLE_NEON}‚ïë{c.RESET}
{c.PURPLE_NEON}‚ïë{c.RESET}                        {c.YELLOW_NEON}‚ñà‚ñà‚ñà‚ñà‚ñà{c.RESET}  {c.GREEN_NEON}‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà{c.RESET} {c.PURPLE_NEON}‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà{c.RESET} {c.PINK_NEON}‚ñà‚ñà{c.RESET}                         {c.PURPLE_NEON}‚ïë{c.RESET}
{c.PURPLE_NEON}‚ïë{c.RESET}                                                                              {c.PURPLE_NEON}‚ïë{c.RESET}
{c.PURPLE_NEON}‚ïë{c.RESET}                    {c.CYAN_NEON}{c.BOLD}Universal LLM Terminal for Mobile Devices{c.RESET}                    {c.PURPLE_NEON}‚ïë{c.RESET}
{c.PURPLE_NEON}‚ïë{c.RESET}                           {c.YELLOW_NEON}‚ú® Ne√≥n Powered CLI ‚ú®{c.RESET}                            {c.PURPLE_NEON}‚ïë{c.RESET}
{c.PURPLE_NEON}‚ïë{c.RESET}                                                                              {c.PURPLE_NEON}‚ïë{c.RESET}
{c.PURPLE_NEON}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù{c.RESET}
"""
    return banner

def get_chispart_3d_banner():
    """
    Banner 3D alternativo m√°s compacto
    """
    c = ChispartColors
    
    banner = f"""
{c.GREEN_NEON}   ‚ñÑ‚ñà‚ñà‚ñà‚ñà‚ñÑ   {c.PURPLE_NEON}‚ñà‚ñà{c.RESET}  {c.PINK_NEON}‚ñà‚ñà{c.RESET} {c.CYAN_NEON}‚ñà‚ñà{c.RESET} {c.GREEN_NEON}‚ñÑ‚ñà‚ñà‚ñà‚ñà‚ñÑ{c.RESET}  {c.PURPLE_NEON}‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà{c.RESET}   {c.PINK_NEON}‚ñÑ‚ñà‚ñà‚ñà‚ñà‚ñÑ{c.RESET}  {c.CYAN_NEON}‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà{c.RESET}
{c.GREEN_NEON}  ‚ñê‚ñà‚ñà‚ñå  ‚ñê‚ñà‚ñà‚ñå {c.PURPLE_NEON}‚ñà‚ñà{c.RESET}  {c.PINK_NEON}‚ñà‚ñà{c.RESET} {c.CYAN_NEON}‚ñà‚ñà{c.RESET} {c.GREEN_NEON}‚ñê‚ñà‚ñà‚ñå{c.RESET}     {c.PURPLE_NEON}‚ñà‚ñà{c.RESET}   {c.PURPLE_NEON}‚ñà‚ñà{c.RESET} {c.PINK_NEON}‚ñê‚ñà‚ñà‚ñå  ‚ñê‚ñà‚ñà‚ñå{c.RESET} {c.CYAN_NEON}‚ñà‚ñà{c.RESET}   {c.CYAN_NEON}‚ñà‚ñà{c.RESET}
{c.GREEN_NEON}  ‚ñê‚ñà‚ñà‚ñå       {c.PURPLE_NEON}‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà{c.RESET} {c.CYAN_NEON}‚ñà‚ñà{c.RESET} {c.GREEN_NEON}‚ñê‚ñà‚ñà‚ñå{c.RESET}     {c.PURPLE_NEON}‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà{c.RESET}  {c.PINK_NEON}‚ñê‚ñà‚ñà‚ñå  ‚ñê‚ñà‚ñà‚ñå{c.RESET} {c.CYAN_NEON}‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà{c.RESET}
{c.GREEN_NEON}  ‚ñê‚ñà‚ñà‚ñå  ‚ñê‚ñà‚ñà‚ñå {c.PURPLE_NEON}‚ñà‚ñà{c.RESET}  {c.PINK_NEON}‚ñà‚ñà{c.RESET} {c.CYAN_NEON}‚ñà‚ñà{c.RESET} {c.GREEN_NEON}‚ñê‚ñà‚ñà‚ñå{c.RESET}     {c.PURPLE_NEON}‚ñà‚ñà{c.RESET}       {c.PINK_NEON}‚ñê‚ñà‚ñà‚ñå  ‚ñê‚ñà‚ñà‚ñå{c.RESET} {c.CYAN_NEON}‚ñà‚ñà{c.RESET}   {c.CYAN_NEON}‚ñà‚ñà{c.RESET}
{c.GREEN_NEON}   ‚ñÄ‚ñà‚ñà‚ñà‚ñà‚ñÄ   {c.PURPLE_NEON}‚ñà‚ñà{c.RESET}  {c.PINK_NEON}‚ñà‚ñà{c.RESET} {c.CYAN_NEON}‚ñà‚ñà{c.RESET} {c.GREEN_NEON} ‚ñÄ‚ñà‚ñà‚ñà‚ñà‚ñÄ{c.RESET}  {c.PURPLE_NEON}‚ñà‚ñà{c.RESET}       {c.PINK_NEON} ‚ñÄ‚ñà‚ñà‚ñà‚ñà‚ñÄ{c.RESET}  {c.CYAN_NEON}‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà{c.RESET}

                    {c.YELLOW_NEON}‚ñÑ‚ñà‚ñà‚ñà‚ñà‚ñÑ{c.RESET}  {c.GREEN_NEON}‚ñà‚ñà{c.RESET}      {c.PURPLE_NEON}‚ñà‚ñà{c.RESET}      {c.PINK_NEON}‚ñà‚ñà{c.RESET}
                   {c.YELLOW_NEON}‚ñê‚ñà‚ñà‚ñå{c.RESET}     {c.GREEN_NEON}‚ñà‚ñà{c.RESET}      {c.PURPLE_NEON}‚ñà‚ñà{c.RESET}      {c.PINK_NEON}‚ñà‚ñà{c.RESET}
                   {c.YELLOW_NEON}‚ñê‚ñà‚ñà‚ñå{c.RESET}     {c.GREEN_NEON}‚ñà‚ñà{c.RESET}      {c.PURPLE_NEON}‚ñà‚ñà{c.RESET}      {c.PINK_NEON}‚ñà‚ñà{c.RESET}
                   {c.YELLOW_NEON}‚ñê‚ñà‚ñà‚ñå{c.RESET}     {c.GREEN_NEON}‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà{c.RESET} {c.PURPLE_NEON}‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà{c.RESET} {c.PINK_NEON}‚ñà‚ñà{c.RESET}
                    {c.YELLOW_NEON}‚ñÄ‚ñà‚ñà‚ñà‚ñà‚ñÄ{c.RESET}

            {c.CYAN_NEON}{c.BOLD}Universal LLM Terminal for Mobile Devices{c.RESET}
                     {c.YELLOW_NEON}‚ú® Ne√≥n Powered CLI ‚ú®{c.RESET}
"""
    return banner

def get_chispart_minimal_banner():
    """
    Banner minimalista para espacios reducidos
    """
    c = ChispartColors
    
    banner = f"""
{c.GREEN_NEON}  ‚ñÑ‚ñà‚ñà‚ñà‚ñà‚ñÑ {c.PURPLE_NEON}‚ñà‚ñà{c.RESET}  {c.PINK_NEON}‚ñà‚ñà{c.RESET} {c.CYAN_NEON}‚ñà‚ñà{c.RESET} {c.GREEN_NEON}‚ñÑ‚ñà‚ñà‚ñà‚ñà‚ñÑ{c.RESET}  {c.PURPLE_NEON}‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà{c.RESET}  {c.PINK_NEON}‚ñÑ‚ñà‚ñà‚ñà‚ñà‚ñÑ{c.RESET}  {c.CYAN_NEON}‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà{c.RESET}
{c.GREEN_NEON} ‚ñê‚ñà‚ñà‚ñå    {c.PURPLE_NEON}‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà{c.RESET} {c.CYAN_NEON}‚ñà‚ñà{c.RESET} {c.GREEN_NEON}‚ñê‚ñà‚ñà‚ñå{c.RESET}     {c.PURPLE_NEON}‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà{c.RESET}  {c.PINK_NEON}‚ñê‚ñà‚ñà‚ñå  ‚ñê‚ñà‚ñà‚ñå{c.RESET} {c.CYAN_NEON}‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà{c.RESET}
{c.GREEN_NEON} ‚ñê‚ñà‚ñà‚ñå    {c.PURPLE_NEON}‚ñà‚ñà{c.RESET}  {c.PINK_NEON}‚ñà‚ñà{c.RESET} {c.CYAN_NEON}‚ñà‚ñà{c.RESET} {c.GREEN_NEON}‚ñê‚ñà‚ñà‚ñå{c.RESET}     {c.PURPLE_NEON}‚ñà‚ñà{c.RESET}       {c.PINK_NEON}‚ñê‚ñà‚ñà‚ñå  ‚ñê‚ñà‚ñà‚ñå{c.RESET} {c.CYAN_NEON}‚ñà‚ñà{c.RESET}   {c.CYAN_NEON}‚ñà‚ñà{c.RESET}
{c.GREEN_NEON}  ‚ñÄ‚ñà‚ñà‚ñà‚ñà‚ñÄ {c.PURPLE_NEON}‚ñà‚ñà{c.RESET}  {c.PINK_NEON}‚ñà‚ñà{c.RESET} {c.CYAN_NEON}‚ñà‚ñà{c.RESET} {c.GREEN_NEON} ‚ñÄ‚ñà‚ñà‚ñà‚ñà‚ñÄ{c.RESET}  {c.PURPLE_NEON}‚ñà‚ñà{c.RESET}       {c.PINK_NEON} ‚ñÄ‚ñà‚ñà‚ñà‚ñà‚ñÄ{c.RESET}  {c.CYAN_NEON}‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà{c.RESET}

        {c.CYAN_NEON}Universal LLM Terminal{c.RESET} ‚Ä¢ {c.YELLOW_NEON}‚ú® Ne√≥n Powered ‚ú®{c.RESET}
"""
    return banner

def get_chispart_isometric_filled():
    """
    Banner isom√©trico estilo --filled m√°s elaborado
    Inspirado en oh-my-logo con efectos 3D
    """
    c = ChispartColors
    
    banner = f"""
{c.PURPLE_NEON}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó{c.RESET}
{c.PURPLE_NEON}‚ïë{c.RESET}                                                                                {c.PURPLE_NEON}‚ïë{c.RESET}
{c.PURPLE_NEON}‚ïë{c.RESET}     {c.GREEN_NEON}‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà{c.RESET}  {c.PURPLE_NEON}‚ñà‚ñà{c.RESET}   {c.PINK_NEON}‚ñà‚ñà{c.RESET}  {c.CYAN_NEON}‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà{c.RESET}  {c.GREEN_NEON}‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà{c.RESET}   {c.PURPLE_NEON}‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà{c.RESET}  {c.PINK_NEON}‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà{c.RESET}  {c.CYAN_NEON}‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà{c.RESET}     {c.PURPLE_NEON}‚ïë{c.RESET}
{c.PURPLE_NEON}‚ïë{c.RESET}    {c.GREEN_NEON}‚ñà‚ñà{c.RESET}‚ñë‚ñë‚ñë‚ñë‚ñë{c.GREEN_NEON}‚ñà‚ñà{c.RESET} {c.PURPLE_NEON}‚ñà‚ñà{c.RESET}   {c.PINK_NEON}‚ñà‚ñà{c.RESET} {c.CYAN_NEON}‚ñà‚ñà{c.RESET}‚ñë‚ñë‚ñë‚ñë‚ñë{c.CYAN_NEON}‚ñà‚ñà{c.RESET} {c.GREEN_NEON}‚ñà‚ñà{c.RESET}‚ñë‚ñë‚ñë‚ñë‚ñë{c.GREEN_NEON}‚ñà‚ñà{c.RESET}  {c.PURPLE_NEON}‚ñà‚ñà{c.RESET}‚ñë‚ñë‚ñë‚ñë‚ñë{c.PURPLE_NEON}‚ñà‚ñà{c.RESET} {c.PINK_NEON}‚ñà‚ñà{c.RESET}‚ñë‚ñë‚ñë‚ñë‚ñë{c.PINK_NEON}‚ñà‚ñà{c.RESET} {c.CYAN_NEON}‚ñà‚ñà{c.RESET}‚ñë‚ñë‚ñë‚ñë‚ñë{c.CYAN_NEON}‚ñà‚ñà{c.RESET}    {c.PURPLE_NEON}‚ïë{c.RESET}
{c.PURPLE_NEON}‚ïë{c.RESET}    {c.GREEN_NEON}‚ñà‚ñà{c.RESET}‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë  {c.PURPLE_NEON}‚ñà‚ñà{c.RESET}   {c.PINK_NEON}‚ñà‚ñà{c.RESET} {c.CYAN_NEON}‚ñà‚ñà{c.RESET}‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë  {c.GREEN_NEON}‚ñà‚ñà{c.RESET}‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë   {c.PURPLE_NEON}‚ñà‚ñà{c.RESET}‚ñë‚ñë‚ñë‚ñë‚ñë{c.PURPLE_NEON}‚ñà‚ñà{c.RESET} {c.PINK_NEON}‚ñà‚ñà{c.RESET}‚ñë‚ñë‚ñë‚ñë‚ñë{c.PINK_NEON}‚ñà‚ñà{c.RESET} {c.CYAN_NEON}‚ñà‚ñà{c.RESET}‚ñë‚ñë‚ñë‚ñë‚ñë{c.CYAN_NEON}‚ñà‚ñà{c.RESET}    {c.PURPLE_NEON}‚ïë{c.RESET}
{c.PURPLE_NEON}‚ïë{c.RESET}    {c.GREEN_NEON}‚ñà‚ñà{c.RESET}‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë  {c.PURPLE_NEON}‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà{c.RESET}  {c.CYAN_NEON}‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà{c.RESET}   {c.GREEN_NEON}‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà{c.RESET}    {c.PURPLE_NEON}‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà{c.RESET}  {c.PINK_NEON}‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà{c.RESET}  {c.CYAN_NEON}‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà{c.RESET}     {c.PURPLE_NEON}‚ïë{c.RESET}
{c.PURPLE_NEON}‚ïë{c.RESET}    {c.GREEN_NEON}‚ñà‚ñà{c.RESET}‚ñë‚ñë‚ñë‚ñë‚ñë{c.GREEN_NEON}‚ñà‚ñà{c.RESET} {c.PURPLE_NEON}‚ñà‚ñà{c.RESET}   {c.PINK_NEON}‚ñà‚ñà{c.RESET} {c.CYAN_NEON}‚ñà‚ñà{c.RESET}‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë  {c.GREEN_NEON}‚ñà‚ñà{c.RESET}‚ñë‚ñë‚ñë‚ñë‚ñë{c.GREEN_NEON}‚ñà‚ñà{c.RESET}  {c.PURPLE_NEON}‚ñà‚ñà{c.RESET}‚ñë‚ñë‚ñë‚ñë‚ñë{c.PURPLE_NEON}‚ñà‚ñà{c.RESET} {c.PINK_NEON}‚ñà‚ñà{c.RESET}‚ñë‚ñë‚ñë‚ñë‚ñë{c.PINK_NEON}‚ñà‚ñà{c.RESET} {c.CYAN_NEON}‚ñà‚ñà{c.RESET}‚ñë‚ñë‚ñë‚ñë‚ñë{c.CYAN_NEON}‚ñà‚ñà{c.RESET}    {c.PURPLE_NEON}‚ïë{c.RESET}
{c.PURPLE_NEON}‚ïë{c.RESET}     {c.GREEN_NEON}‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà{c.RESET}  {c.PURPLE_NEON}‚ñà‚ñà{c.RESET}   {c.PINK_NEON}‚ñà‚ñà{c.RESET} {c.CYAN_NEON}‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà{c.RESET}  {c.GREEN_NEON}‚ñà‚ñà{c.RESET}‚ñë‚ñë‚ñë‚ñë‚ñë{c.GREEN_NEON}‚ñà‚ñà{c.RESET}  {c.PURPLE_NEON}‚ñà‚ñà{c.RESET}‚ñë‚ñë‚ñë‚ñë‚ñë{c.PURPLE_NEON}‚ñà‚ñà{c.RESET} {c.PINK_NEON}‚ñà‚ñà{c.RESET}‚ñë‚ñë‚ñë‚ñë‚ñë{c.PINK_NEON}‚ñà‚ñà{c.RESET} {c.CYAN_NEON}‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà{c.RESET}     {c.PURPLE_NEON}‚ïë{c.RESET}
{c.PURPLE_NEON}‚ïë{c.RESET}                                                                                {c.PURPLE_NEON}‚ïë{c.RESET}
{c.PURPLE_NEON}‚ïë{c.RESET}                         {c.YELLOW_NEON}‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà{c.RESET}   {c.GREEN_NEON}‚ñà‚ñà{c.RESET}       {c.PURPLE_NEON}‚ñà‚ñà{c.RESET}       {c.PINK_NEON}‚ñà‚ñà{c.RESET}                          {c.PURPLE_NEON}‚ïë{c.RESET}
{c.PURPLE_NEON}‚ïë{c.RESET}                        {c.YELLOW_NEON}‚ñà‚ñà{c.RESET}‚ñë‚ñë‚ñë‚ñë{c.YELLOW_NEON}‚ñà‚ñà{c.RESET}  {c.GREEN_NEON}‚ñà‚ñà{c.RESET}       {c.PURPLE_NEON}‚ñà‚ñà{c.RESET}       {c.PINK_NEON}‚ñà‚ñà{c.RESET}                          {c.PURPLE_NEON}‚ïë{c.RESET}
{c.PURPLE_NEON}‚ïë{c.RESET}                        {c.YELLOW_NEON}‚ñà‚ñà{c.RESET}‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë  {c.GREEN_NEON}‚ñà‚ñà{c.RESET}       {c.PURPLE_NEON}‚ñà‚ñà{c.RESET}       {c.PINK_NEON}‚ñà‚ñà{c.RESET}                          {c.PURPLE_NEON}‚ïë{c.RESET}
{c.PURPLE_NEON}‚ïë{c.RESET}                        {c.YELLOW_NEON}‚ñà‚ñà{c.RESET}‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë  {c.GREEN_NEON}‚ñà‚ñà{c.RESET}       {c.PURPLE_NEON}‚ñà‚ñà{c.RESET}       {c.PINK_NEON}‚ñà‚ñà{c.RESET}                          {c.PURPLE_NEON}‚ïë{c.RESET}
{c.PURPLE_NEON}‚ïë{c.RESET}                         {c.YELLOW_NEON}‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà{c.RESET}   {c.GREEN_NEON}‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà{c.RESET} {c.PURPLE_NEON}‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà{c.RESET} {c.PINK_NEON}‚ñà‚ñà{c.RESET}                          {c.PURPLE_NEON}‚ïë{c.RESET}
{c.PURPLE_NEON}‚ïë{c.RESET}                                                                                {c.PURPLE_NEON}‚ïë{c.RESET}
{c.PURPLE_NEON}‚ïë{c.RESET}                     {c.CYAN_NEON}{c.BOLD}Universal LLM Terminal for Mobile Devices{c.RESET}                     {c.PURPLE_NEON}‚ïë{c.RESET}
{c.PURPLE_NEON}‚ïë{c.RESET}                            {c.YELLOW_NEON}‚ú® Ne√≥n Powered CLI ‚ú®{c.RESET}                             {c.PURPLE_NEON}‚ïë{c.RESET}
{c.PURPLE_NEON}‚ïë{c.RESET}                                                                                {c.PURPLE_NEON}‚ïë{c.RESET}
{c.PURPLE_NEON}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù{c.RESET}
"""
    return banner

def print_banner(style="isometric"):
    """
    Imprime el banner seg√∫n el estilo especificado
    """
    if style == "isometric":
        print(get_chispart_isometric_banner())
    elif style == "3d":
        print(get_chispart_3d_banner())
    elif style == "minimal":
        print(get_chispart_minimal_banner())
    elif style == "filled":
        print(get_chispart_isometric_filled())
    else:
        print(get_chispart_isometric_banner())

def print_welcome_info():
    """
    Imprime informaci√≥n de bienvenida despu√©s del banner
    """
    c = ChispartColors
    
    info = f"""
{c.CYAN_NEON}üöÄ Bienvenido a Chispart-CLI-LLM{c.RESET}

{c.GREEN_NEON}üì± Comandos r√°pidos:{c.RESET}
  {c.YELLOW_NEON}chispart chat 'mensaje'{c.RESET}     - Enviar mensaje
  {c.YELLOW_NEON}chispart interactivo{c.RESET}        - Modo chat interactivo
  {c.YELLOW_NEON}chispart imagen foto.jpg{c.RESET}    - Analizar imagen
  {c.YELLOW_NEON}chispart pdf documento.pdf{c.RESET}  - Analizar PDF

{c.PURPLE_NEON}üîß Comandos de sistema:{c.RESET}
  {c.YELLOW_NEON}chispart --help{c.RESET}             - Ayuda completa
  {c.YELLOW_NEON}chispart-ui{c.RESET}                 - Interfaz web
  {c.YELLOW_NEON}chispart-service{c.RESET}            - Gesti√≥n de servicio

{c.PINK_NEON}‚ö° Comandos s√∫per cortos:{c.RESET}
  {c.YELLOW_NEON}chs{c.RESET}                         - Comando principal
  {c.YELLOW_NEON}chs-ui{c.RESET}                      - Interfaz web
  {c.YELLOW_NEON}chs-start{c.RESET}                   - Iniciar servicio

{c.CYAN_NEON}üí° Ejemplo:{c.RESET} {c.GREEN_NEON}chs chat '¬øCu√°l es la capital de Francia?'{c.RESET}

{c.DIM}üåê M√°s info: https://github.com/SebastianVernisMora/chispart-cli-llm{c.RESET}
"""
    print(info)

def main():
    """
    Funci√≥n principal para testing
    """
    import argparse
    
    parser = argparse.ArgumentParser(description='Chispart Banner Generator')
    parser.add_argument('--style', choices=['isometric', '3d', 'minimal', 'filled'], 
                       default='filled', help='Estilo del banner')
    parser.add_argument('--no-info', action='store_true', help='No mostrar informaci√≥n adicional')
    
    args = parser.parse_args()
    
    print_banner(args.style)
    
    if not args.no_info:
        print_welcome_info()

if __name__ == "__main__":
    main()