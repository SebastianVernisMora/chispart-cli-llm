[tool:pytest]
# Configuración de pytest para Chispart CLI

# Directorio de tests
testpaths = tests

# Patrones de archivos de test
python_files = test_*.py *_test.py

# Patrones de clases de test
python_classes = Test*

# Patrones de funciones de test
python_functions = test_*

# Marcadores personalizados
markers =
    unit: Tests unitarios básicos
    integration: Tests de integración entre componentes
    performance: Tests de rendimiento y carga
    security: Tests de seguridad y validación
    slow: Tests que tardan más de 10 segundos
    api: Tests que requieren conexión a APIs externas
    termux: Tests específicos para entorno Termux
    mock: Tests que usan mocks extensivamente
    cli: Tests de interfaz de línea de comandos
    config: Tests de configuración
    core: Tests de módulos core
    smoke: Tests básicos de funcionamiento

# Opciones por defecto
addopts = 
    --strict-markers
    --strict-config
    --tb=short
    --disable-warnings
    -ra
    --color=yes
    --durations=10

# Filtros de warnings
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore:.*unclosed.*:ResourceWarning

# Configuración de cobertura
[coverage:run]
source = .
omit = 
    tests/*
    */tests/*
    setup.py
    */venv/*
    */env/*
    */__pycache__/*
    */site-packages/*
    archive/*
    backup_legacy/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

# Configuración de HTML coverage
[coverage:html]
directory = htmlcov
title = Chispart CLI Test Coverage Report

# Configuración de XML coverage
[coverage:xml]
output = coverage.xml
